<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alkaid.dtmp.attendance.dao.mapper.WorkOvertimeMapper">
  <resultMap id="BaseResultMap" type="com.alkaid.dtmp.attendance.dao.model.WorkOvertime">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="workovertime_id" jdbcType="INTEGER" property="workovertimeId" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="start_time" jdbcType="TIME" property="startTime" />
    <result column="stop_time" jdbcType="TIME" property="stopTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    workovertime_id, date, user_id, start_time, stop_time, reason
  </sql>
  <select id="selectByExample" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertimeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_work_overtime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_work_overtime
    where workovertime_id = #{workovertimeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tbl_work_overtime
    where workovertime_id = #{workovertimeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertimeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tbl_work_overtime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertime">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tbl_work_overtime (workovertime_id, date, user_id, 
      start_time, stop_time, reason
      )
    values (#{workovertimeId,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{userId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIME}, #{stopTime,jdbcType=TIME}, #{reason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertime">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tbl_work_overtime
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workovertimeId != null">
        workovertime_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workovertimeId != null">
        #{workovertimeId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIME},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=TIME},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertimeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tbl_work_overtime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tbl_work_overtime
    <set>
      <if test="record.workovertimeId != null">
        workovertime_id = #{record.workovertimeId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIME},
      </if>
      <if test="record.stopTime != null">
        stop_time = #{record.stopTime,jdbcType=TIME},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tbl_work_overtime
    set workovertime_id = #{record.workovertimeId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIME},
      stop_time = #{record.stopTime,jdbcType=TIME},
      reason = #{record.reason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertime">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tbl_work_overtime
    <set>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIME},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=TIME},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where workovertime_id = #{workovertimeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alkaid.dtmp.attendance.dao.model.WorkOvertime">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tbl_work_overtime
    set date = #{date,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIME},
      stop_time = #{stopTime,jdbcType=TIME},
      reason = #{reason,jdbcType=VARCHAR}
    where workovertime_id = #{workovertimeId,jdbcType=INTEGER}
  </update>
</mapper>